package:
  name: multiprocessing_on_dill
  version: "3.5.0a4"

source:
  #fn: multiprocessing_on_dill-3.5.0a4.tar.gz
  #url: https://pypi.python.org/packages/source/m/multiprocessing_on_dill/multiprocessing_on_dill-3.5.0a4.tar.gz
  #md5: cd9da5a57987eddb0040939296fe3c3d
  git_url: https://github.com/sixty-north/multiprocessing_on_dill
#  patches:
   # List any patch files here
   # - fix.patch

# build:
  # noarch_python: True
  # preserve_egg_dir: True
  # entry_points:
    # Put any entry points (scripts to be generated automatically) here. The
    # syntax is module:function.  For example
    #
    # - multiprocessing_on_dill = multiprocessing_on_dill:main
    #
    # Would create an entry point called multiprocessing_on_dill that calls multiprocessing_on_dill.main()


  # If this is a new build for the same version, increment the build
  # number. If you do not include this key, it defaults to 0.
  # number: 1

requirements:
  build:
    - python
    - setuptools
    - dill

  run:
    - python
    - dill

test:
  # Python imports
  imports:
    - multiprocessing_on_dill
    - multiprocessing_on_dill.dummy

  # commands:
    # You can put test commands to be run here.  Use this to test that the
    # entry points work.


  # You can also put a file called run_test.py in the recipe that will be run
  # at test time.

  # requires:
    # Put any additional test requirements here.  For example
    # - nose

about:
  home: https://github.com/sixty-north/multiprocessing_on_dill
  license: Python Software Foundation License
  summary: 'A friendly fork of multiprocessing which uses dill instead of pickle'

# See
# http://docs.continuum.io/conda/build.html for
# more information about meta.yaml
